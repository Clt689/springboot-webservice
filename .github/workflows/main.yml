# Github Action 사용


env:
  S3_BUCKET_NAME: seungjo-springboot-build
  PROJECT_NAME: springboot-webservice
  CODE_DEPLOY_APP_NAME: springboot-webservice
  CODE_DEPLOY_GROUP_NAME: springboot-webservice-group

name: deploy

on:
  release:
    types: [push]
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8.0
        uses: actions/setup-java@v2
        with:
          java-version: '8'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Get current time
        id: current-time
        run: echo "::set-output name=formattedTime::$(date +'%Y-%m-%d %H:%M:%S')"

      - name: Show Current Time
        run: echo "CurrentTime=${{ steps.current-time.outputs.formattedTime }}"

      - name: Generate deployment package
        run: |
          mkdir -p before-deploy
          cp scripts/*.sh before-deploy/
          cp appspec.yml before-deploy/
          cp build/libs/*.jar before-deploy/
          cd before-deploy && zip -r before-deploy *
          cd ../ && mkdir -p deploy
          mv before-deploy/before-deploy.zip deploy/${{ env.PROJECT_NAME }}.zip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./deploy/${{ env.PROJECT_NAME }}.zip s3://${{ env.S3_BUCKET_NAME }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.zip

      - name: Code Deploy
        run: aws deploy create-deployment --application-name ${{ env.CODE_DEPLOY_APP_NAME }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.CODE_DEPLOY_GROUP_NAME }} --s3-location bucket=${{ env.S3_BUCKET_NAME }},bundleType=zip,key=${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.zip
